{"version":3,"sources":["types/types.js","firebase/firebase-config.js","helpers/cargarSitios.js","actions/sitios.js","hooks/useForm.js","actions/ui.js","components/passwords/NuevoSitio.js","components/passwords/Sitio.js","components/passwords/ListadoSitios.js","components/layout/Sidebar.js","actions/auth.js","components/layout/Header.js","components/passwords/FormSitios.js","components/passwords/MainScreen.js","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/App.js","serviceWorker.js","reducers/uiReducer.js","reducers/sitiosReducer.js","store/store.js","reducers/authReducer.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","cargarSitios","uid","a","collection","get","sitiosSnap","sitios","forEach","snapHijo","push","id","data","agregarSitioActual","sitio","type","payload","startCargarSitios","dispatch","cargarSitiosMemoria","borrarSitioMemoria","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","errorUi","mensaje","removeError","NuevoSitio","useDispatch","formularioSitio","useSelector","state","error","ui","formValues","className","onClick","onSubmit","e","preventDefault","trim","getState","auth","nuevoSitio","nombreSitio","email","username","password","add","doc","startNuevoSitio","placeholder","onChange","Sitio","ListadoSitios","map","key","Sidebar","login","displayName","startLogout","signOut","logout","Header","href","FormSitios","sitioActual","identificador","nombre","correo","contrasenia","usuario","valores","setValores","useEffect","idSitio","sitioAFirestore","update","Swal","fire","delete","startBorrarSitio","MainScreen","RegisterScreen","password2","length","createUserWithEmailAndPassword","then","user","updateProfile","catch","console","log","startRegisterNameEmailPassword","htmlFor","to","LoginScreen","handleImputChange","signInWithEmailAndPassword","startLoginEmailPassword","AuthRouter","exact","path","component","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","App","cheking","setCheking","isLoggin","setIsLoggin","onAuthStateChanged","Boolean","window","location","hostname","match","loading","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.97891ae9.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    loading: '[UI] loading',\r\n    error: '[UI] error',\r\n    removeError: '[UI] remove error',\r\n\r\n    nuevoSitio : '[sitio] Nuevo sitio Form',\r\n    agregarSitio: '[sitio] Nuevo sitio agregado',\r\n    sitioActual: '[sitio] Sitio actual',\r\n    cargarSitios: '[sitio]Sitios cargados',\r\n    sitioActualizar: '[sitio]Sitio actualizado',\r\n    sitioBorrar: '[sitio] Sitio borrado',\r\n    sitioLimpiar: '[sitio] Sitios limpiados' \r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst  firebaseConfig = {\r\n    apiKey: \"AIzaSyD7F6odmJRKoDWxwbnAEIym0mOQS3H4bec\",\r\n    authDomain: \"passwords-2df7d.firebaseapp.com\",\r\n    databaseURL: \"https://passwords-2df7d.firebaseio.com\",\r\n    projectId: \"passwords-2df7d\",\r\n    storageBucket: \"passwords-2df7d.appspot.com\",\r\n    messagingSenderId: \"595439869698\",\r\n    appId: \"1:595439869698:web:ce1178025f0a796458ac1b\"\r\n  };\r\n \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  \r\n  export {\r\n      db, \r\n      firebase\r\n  }\r\n\r\n  ","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const cargarSitios = async (uid) => {\r\n    \r\n    const sitiosSnap = await db.collection(`${uid}/app/sitios`).get();\r\n    let sitios = [];\r\n    \r\n    sitiosSnap.forEach(snapHijo => {\r\n        sitios.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    \r\n    \r\n    return sitios;\r\n}","import { types } from \"../types/types\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { cargarSitios } from \"../helpers/cargarSitios\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const nuevoSitio = () => ({\r\n    type: types.nuevoSitio\r\n})\r\n\r\nexport const startNuevoSitio = (name) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n        \r\n        const nuevoSitio = {\r\n            nombreSitio:name,\r\n            email:'',\r\n            username:'',\r\n            password:''\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/app/sitios`).add(nuevoSitio);\r\n        dispatch( agregarSitioActual(doc.id, nuevoSitio) );\r\n    }\r\n}\r\n\r\nexport const agregarSitioActual = (id, sitio) => ({\r\n    type: types.sitioActual,\r\n    payload: {\r\n        id,\r\n        ...sitio\r\n    }\r\n})\r\n\r\nexport const startCargarSitios = (uid) => {\r\n    return async (dispatch) => {\r\n        \r\n        const sitios = await cargarSitios(uid);\r\n        dispatch(cargarSitiosMemoria(sitios));\r\n    }\r\n}\r\n\r\nexport const cargarSitiosMemoria = (sitios) => ({\r\n    type: types.cargarSitios,\r\n    payload: sitios\r\n})\r\n\r\nexport const startGuardarSitio = ( sitio ) => {\r\n    return async (dispatch, getState) => {\r\n     const {uid} = getState().auth;\r\n    \r\n     const idSitio = sitio.identificador;\r\n     const sitioAFirestore = {\r\n         email: sitio.correo,\r\n         nombreSitio: sitio.nombre,\r\n         username: sitio.usuario,\r\n         password: sitio.contrasenia\r\n     }\r\n\r\n     await db.doc(`${uid}/app/sitios/${idSitio}`).update(sitioAFirestore);\r\n     dispatch(agregarSitioActual(idSitio, sitioAFirestore));\r\n     //REFRESCAR EN LA LISTA DE NOTAS() GLOBALES CON UN FILTER\r\n    dispatch(startCargarSitios(uid));\r\n    Swal.fire('Sitio guardado!', '', 'success');\r\n     \r\n    }\r\n}\r\n\r\nexport const startBorrarSitio = (id) =>{\r\n    return async (dispatch, getState) => {\r\n    \r\n        const {uid} = getState().auth;\r\n        await db.doc(`${uid}/app/sitios/${ id }`).delete()\r\n        dispatch(borrarSitioMemoria(id));\r\n        Swal.fire('Eliminado!', 'Sitio borrado', 'error');\r\n    }\r\n} \r\n\r\nconst borrarSitioMemoria = (id) => ({\r\n    type: types.sitioBorrar,\r\n    payload: id\r\n})\r\n\r\nexport const sitiosLogout = () =>  ({\r\n    type: types.sitioLimpiar\r\n})\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { types } from '../types/types';\r\n\r\n\r\nexport const errorUi = ( mensaje ) => ({\r\n    type: types.error,\r\n    payload: mensaje\r\n})\r\n\r\nexport const removeError = ( ) => ({\r\n    type: types.removeError\r\n})","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { nuevoSitio, startNuevoSitio } from '../../actions/sitios';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { errorUi, removeError } from '../../actions/ui';\r\n\r\nexport const NuevoSitio = () => {\r\n    const dispatch = useDispatch();\r\n    const { formularioSitio } = useSelector(state => state.sitios);\r\n    const { error } = useSelector (state => state.ui);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name:''\r\n    })\r\n\r\n    const { name } = formValues;\r\n    \r\n    \r\n    const agregarSitio = () => {\r\n        dispatch( nuevoSitio() );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(name.trim() === ''){\r\n            dispatch(errorUi('El nombre del sitio no puede estar vacio'));\r\n            return;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        dispatch(startNuevoSitio(name));\r\n        \r\n        reset();\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        { formularioSitio === null  ? ( <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick = { agregarSitio }\r\n            >Nuevo Sitio</button> ) : (\r\n                <form\r\n                className=\"formulario-nuevo-sitio\"\r\n                onSubmit = { handleSubmit }\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre del Sitio\"\r\n                    name=\"name\"\r\n                    onChange={ handleInputChange }\r\n                    value = { name }\r\n                />\r\n            \r\n                {error && <div className=\"mensaje error\">{ error } </div>}\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-block\"\r\n                    value=\"Agregar sitio\"\r\n                />\r\n\r\n            </form>\r\n            ) }\r\n            \r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { agregarSitioActual } from '../../actions/sitios';\r\n\r\n\r\nexport const Sitio = ({sitio}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    const activarSitioActual = () => {\r\n        dispatch(agregarSitioActual(sitio.id, sitio))\r\n        \r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick = { activarSitioActual }\r\n            >\r\n                {sitio.nombreSitio}\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sitio } from './Sitio'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const ListadoSitios = () => {\r\n\r\n    const { sitios } = useSelector(state => state.sitios);\r\n    \r\n    \r\n    return (\r\n        <ul className=\"listado-sitios animate__animated animate__fadeIn animate__faster \">\r\n            {sitios.map(sitio => (\r\n                <Sitio \r\n                    className=\"animate__animated animate__fadeIn animate__faster\"\r\n                    key={sitio.id}\r\n                    sitio={sitio}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NuevoSitio } from '../passwords/NuevoSitio'\r\nimport { ListadoSitios } from '../passwords/ListadoSitios'\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    \r\n\r\n    return (\r\n        <aside>\r\n            <h1>Gestor de contraseñas</h1>\r\n\r\n            \r\n            <NuevoSitio />\r\n\r\n            <div className=\"sitios\">\r\n                <h2>Tus sitios</h2>\r\n                <ListadoSitios/>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2'\r\nimport { sitiosLogout } from './sitios';\r\n\r\n\r\nexport const startLoginEmailPassword = ( email, password ) =>{\r\n    return(dispatch) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(({user}) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n        })\r\n        .catch(e => {\r\n            console.log('Por favor ingrese un email valido');\r\n            Swal.fire('Error', 'No hay credenciales con el usuario que esta ingresando', 'error');\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid, \r\n        displayName\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const startRegisterNameEmailPassword = ( name, email, password ) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then( async ({user}) => {\r\n            await user.updateProfile({displayName: name})\r\n            dispatch(login(user.uid, user.displayName))\r\n        })\r\n        .catch(e => {\r\n            console.log('Por favor ingrese un email valido');\r\n            Swal.fire('Error', 'El usuario ya esta registrado o no es un email valido', 'error');\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return( dispatch ) => {\r\n        firebase.auth().signOut();\r\n\r\n        dispatch(logout())\r\n        dispatch(sitiosLogout())\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"app-header\">\r\n                <p className=\"nombre-usuario\">Hola <span>{ name }</span></p>\r\n\r\n                <nav className=\"nav-principal\">\r\n                    <a href=\"#!\" onClick={ handleLogout }>Cerrar Sesión</a>\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startGuardarSitio, startBorrarSitio } from '../../actions/sitios';\r\nimport { errorUi } from '../../actions/ui';\r\n\r\nexport const FormSitios = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n    const { sitioActual:{nombreSitio, email, password, username, id} } = useSelector(state => state.sitios)\r\n    \r\n    const { sitioActual } = useSelector(state => state.sitios);\r\n    const {error} = useSelector(state => state.ui);\r\n\r\n    const [valores, setValores] = useState({\r\n        identificador: id,\r\n        nombre:nombreSitio,\r\n        correo: email,\r\n        contrasenia: password,\r\n        usuario: username\r\n    })\r\n\r\n    const {identificador, nombre, correo, contrasenia, usuario} = valores;\r\n    \r\n\r\n    const handleInputChange = e => {\r\n       setValores({\r\n           ...valores,\r\n           [e.target.name] : e.target.value\r\n       });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValores({\r\n            identificador: id,\r\n            nombre:nombreSitio,\r\n            correo: email,\r\n            contrasenia: password,\r\n            usuario: username\r\n        })\r\n    }, [sitioActual, email, id, nombreSitio, password, username])\r\n\r\n    const handleSubmitSitio = e => {\r\n        e.preventDefault();\r\n        if(nombre.trim() === '' || contrasenia.trim() === ''\r\n        || correo.trim() === '' || usuario.trim === ''){\r\n            dispatch(errorUi('Todos los campos son obligatorios'))\r\n        }\r\n        dispatch(startGuardarSitio(valores));\r\n\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startBorrarSitio(identificador))\r\n    }\r\n\r\n    return (\r\n        <div className=\"formulario animate__animated animate__fadeIn animate__faster\"> \r\n            <form onSubmit={ handleSubmitSitio }>\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre del sitio..\"\r\n                        name=\"nombre\"\r\n                        onChange = { handleInputChange }\r\n                        value = { nombre }\r\n\r\n                               \r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre de usuario\"\r\n                        name=\"usuario\"\r\n                        onChange = { handleInputChange }\r\n                        value={ usuario }\r\n                       \r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"email\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"correo\"\r\n                        onChange = { handleInputChange }\r\n                        value = { correo }\r\n                       \r\n                        \r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"***********\"\r\n                        name=\"contrasenia\"\r\n                        onChange = { handleInputChange }\r\n                        value={ contrasenia }\r\n                        \r\n                        \r\n                    />\r\n                </div>\r\n                { (error) && <div className=\"mensaje error\">{ error }</div>}\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-block btn-submit\"\r\n                    value=\"Guardar\"\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-eliminar btn-block\"\r\n                    onClick = { handleDelete }\r\n                >Eliminar Sitio &times;</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from '../layout/Sidebar'\r\nimport { Header } from '../layout/Header'\r\nimport { useSelector } from 'react-redux';\r\nimport { FormSitios } from './FormSitios';\r\n\r\nexport const MainScreen = () => {\r\n\r\n    const { sitioActual } = useSelector(state => state.sitios)\r\n \r\n    \r\n\r\n    return (\r\n        <div className=\"contenedor-app animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <div className=\"seccion-principal\">\r\n\r\n                <Header />\r\n\r\n                <main>\r\n                {(sitioActual === null) ? <h1>No hay un sitio seleccionado</h1> : (<FormSitios />)}\r\n                    \r\n                    \r\n                    <div className=\"contenedor-sitios\">\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { errorUi, removeError } from '../../actions/ui';\r\nimport { startRegisterNameEmailPassword } from '../../actions/auth';\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector(state => state.ui);\r\n   \r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n        if(name.trim() === '' || email.trim() === '' || password.trim() === '' \r\n        || password2.trim() === ''){\r\n            dispatch(errorUi('Todos los campos son obligatorios'))\r\n            return;\r\n        }\r\n\r\n        if(password.length < 6){\r\n            dispatch(errorUi('La contraseña debe tener al menos 6 caracteres'))\r\n            return;\r\n        }\r\n\r\n        if(password !== password2){\r\n            dispatch(errorUi('Las contraseñas deben coincidir'))\r\n            return;\r\n        }\r\n        dispatch(removeError());\r\n        dispatch(startRegisterNameEmailPassword(name, email, password ));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Registrase </h1>\r\n\r\n                {error && (<div className=\"mensaje error \">{error}</div>)}\r\n\r\n                <form onSubmit = { handleRegister }\r\n                      className=\"animate__animated animate__fadeIn animate__faster\"\r\n                >\r\n                    <div className=\"campo-form\">\r\n                            <label htmlFor=\"name\">Nombre</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"name\"\r\n                                placeholder=\"Tu nombre\"\r\n                                value= { name }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"correo@correo.com\"\r\n                            value = { email }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Contraseña</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"***************\"\r\n                            value = { password }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirm\">Confirmar contraseña</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            id=\"password2\"\r\n                            placeholder=\"***************\"\r\n                            value = { password2 }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                    \r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                        value=\"Iniciar Sesión\"/>\r\n                    </div>\r\n                    <Link to =\"/auth/login\" className=\"enlace-cuenta\">Ya tienes una cuenta?</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLoginEmailPassword } from '../../actions/auth';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleImputChange] = useForm({\r\n        email:'',\r\n        password: ''\r\n        \r\n    })\r\n\r\n    const { email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n                <form onSubmit = { handleLogin }\r\n                      className=\"animate__animated animate__fadeIn animate__faster\"\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"correo@correo.com\"\r\n                            value= { email }\r\n                            onChange = { handleImputChange }\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Contraseña</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"***************\"\r\n                            value= { password }\r\n                            onChange = { handleImputChange }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                    \r\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                        value=\"Iniciar Sesión\"/>\r\n                    </div>\r\n                    <Link to =\"/auth/register\" className=\"enlace-cuenta\">Crear una cuenta</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n  } from 'react-router-dom';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/register\"\r\n                    component = { RegisterScreen } \r\n                />\r\n                <Route \r\n                    exact\r\n                    path=\"/auth/login\"\r\n                    component = { LoginScreen }\r\n                />\r\n                    \r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n \r\n\r\n    return (\r\n       <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to =\"/auth/login\" /> )\r\n            )}\r\n\r\n        />\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n       <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( isAuthenticated )\r\n                ? ( <Redirect to =\"/\" /> )\r\n                : ( <Component {...props} /> )\r\n            )}\r\n\r\n        />\r\n        \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\n\nimport { MainScreen } from '../components/passwords/MainScreen';\nimport { AuthRouter } from './AuthRouter';\n\nimport { firebase } from '../firebase/firebase-config';\nimport { login } from '../actions/auth';\nimport { startCargarSitios } from '../actions/sitios';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRouter } from './PublicRouter';\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const [cheking, setCheking] = useState(true);\n  const [isLoggin, setIsLoggin] = useState(false);\n\n  useEffect(() => {\n      firebase.auth().onAuthStateChanged( async(user) => {\n        if(user?.uid){\n          dispatch(login(user.uid, user.displayName));\n          setIsLoggin(true);\n          \n          dispatch(startCargarSitios(user.uid));\n        \n        } else {\n          setIsLoggin(false)\n        }\n\n        setCheking(false);\n      })\n  }, [dispatch])\n\n  if( cheking ) {\n    return (\n        <h1>Espere....</h1>\n    )\n    \n  }\n\n  return (\n  \n    <Router>\n      <div>\n        <Switch>\n          <PublicRouter \n              path=\"/auth\"\n              component = { AuthRouter }\n              isAuthenticated = { isLoggin }\n              \n          />\n          \n          <PrivateRouter\n              exact\n              isAuthenticated = { isLoggin } \n              path =\"/\"\n              component = { MainScreen } \n          />\n\n        </Switch>\n      </div>\n    </Router>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.error:\r\n            return {\r\n                ...state, \r\n                error: action.payload\r\n            }\r\n        case types.removeError:\r\n            return{\r\n                ...state,\r\n                error:null\r\n            }\r\n            \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    sitios: [],\r\n    formularioSitio: null,\r\n    sitioActual: null\r\n}\r\n\r\nexport const sitiosReducer = (state= initialState , action) => {\r\n    switch (action.type) {\r\n        case types.nuevoSitio:\r\n            return {\r\n                ...state,\r\n                formularioSitio: true\r\n            }\r\n        case types.sitioActual:\r\n            return {\r\n                ...state,\r\n                sitioActual: action.payload,\r\n                formularioSitio: null\r\n            }\r\n        case types.cargarSitios:\r\n            return {\r\n                ...state,\r\n                sitios: [...action.payload]\r\n            }\r\n        case types.sitioBorrar:\r\n            return {\r\n                ...state,\r\n                sitioActual: null,\r\n                sitios: state.sitios.filter(sitio => sitio.id !== action.payload)\r\n            }\r\n        case types.sitioLimpiar:\r\n            return {\r\n                ...state,\r\n                sitioActual:null,\r\n                sitios:[],\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { sitiosReducer } from '../reducers/sitiosReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    sitios: sitiosReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid:action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './routers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}